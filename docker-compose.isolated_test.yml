version: '3.9'

networks:
  another_network:
    name: another_network


services:
  test_menu_app:
    container_name: test_menu_up
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PG_USER: 'admin1'
      PG_PASSWORD: 'admin111'
      PG_HOST: 'test_db'
      PG_PORT: 5432
      PG_DB : 'test_db'
      REDIS_HOST: test_redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_ENCODING: utf-8
      REDIS_CACHE_EXPIRE_TIME: 300
      REDIS_MAX_CONNECTIONS: 10
    entrypoint: >
      sh -c "
        echo 'Starting app now' &&
        echo 'we are ready' &&
        uvicorn main:menu_app --host 0.0.0.0 --reload
      "
    networks:
      - another_network
    restart: always
    expose:
      - 8000
#    ports:
#      - "8000:8000"
    depends_on:
      test_db:
        condition: service_healthy
      test_redis:
        condition: service_healthy


  test_db:
    container_name: test_db
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: 'admin1'
      POSTGRES_PASSWORD: 'admin111'
      POSTGRES_DB: 'test_db'
    expose:
      - 5432
#    ports:
#      - '5433:5432'
    networks:
      - another_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin1 -d test_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  tests:
    container_name: tests
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PG_USER: 'admin1'
      PG_PASSWORD: 'admin111'
      PG_HOST: 'test_db'
      PG_PORT: 5432
      PG_DB: 'test_db'
      API_URL: 'http://test_menu_up:8000/api/v1'
    command: 'pytest -vv'
    networks:
      - another_network
    depends_on:
      - test_menu_app

  test_redis:
    container_name: test_redis
    image: redis:latest
    expose:
      - 6379
#    ports:
#      - "9000:6379"
    networks:
      - another_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 100