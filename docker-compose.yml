version: '3.9'

networks:
  menu_app_network:
    name: menu_app_network


volumes:
  pgdata:


services:
  menu_app:
    container_name: fastapi_menu
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      CONFIG_FILE: '.env'
#      PG_USER: 'admin1'
#      PG_PASSWORD: 'admin111'
#      PG_HOST: 'app_db'
#      PG_PORT: 5432
#      PG_DB : 'app_db'
#      REDIS_HOST: app_redis
#      REDIS_PORT: 6379
#      REDIS_DB: 0
#      REDIS_ENCODING: utf-8
#      REDIS_CACHE_EXPIRE_TIME: 300
#      REDIS_MAX_CONNECTIONS: 10

    entrypoint: >
      sh -c "
        echo 'Starting app now' &&
        echo 'we are ready' &&
        uvicorn main:menu_app --host 0.0.0.0 --reload
      "
    volumes:
      - ./src:/app/src/
    networks:
      - menu_app_network
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      app_db:
        condition: service_healthy
      app_redis:
        condition: service_healthy


  app_db:
    container_name: app_db
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: 'admin1'
      POSTGRES_PASSWORD: 'admin111'
      POSTGRES_DB: 'app_db'

    ports:
      - '5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./logs:/var/log
      - .:/docker-entrypoint-initdb.d
    networks:
      - menu_app_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin1 -d app_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app_redis:
    container_name: app_redis
    image: redis:latest
    expose:
      - 6379
    ports:
      - "9000:6379"
    networks:
      - menu_app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 100
